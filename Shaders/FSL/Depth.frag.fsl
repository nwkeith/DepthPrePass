/*
 * Modifications Copyright (c) 2025 Nathan Keith
 *
 * This file is a modified version of a source file from The Forge Framework,
 * used under the terms of the Apache License 2.0.
 * Modifications include overdraw visualization and depth pre-pass integration.
 * 
 * See original project: https://github.com/ConfettiFX/The-Forge
 */

/*
 * Copyright (c) 2017-2025 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

// USERMACRO: SAMPLE_COUNT [1,2,4]
// Uncomment this definition to use ray differentials method for calculating
// gradients instead of screen-space projected triangles method.
// #define USE_RAY_DIFFERENTIALS

#include "Shading.h.fsl"
#include "../../../../../Common_3/Renderer/VisibilityBuffer/Shaders/FSL/VisibilityBufferShadingUtilities.h.fsl"

#include "VisibilityBufferResources.h.fsl"
#include "GLobal.srt.h"

// This shader loads draw / triangle Id per pixel and reconstruct interpolated vertex data.

STRUCT(VSOutput)
{
	DATA(float4, position, SV_Position);
};

// Static descriptors

#if(SAMPLE_COUNT > 1)
EARLY_FRAGMENT_TESTS
#endif
ROOT_SIGNATURE(DefaultRootSignature)
float4 PS_MAIN( VSOutput In )
{
	INIT_MAIN;
	RETURN(float4(0.0, 0.0, 0.0, 0.0));
}
